{"pageProps":{"post":{"slug":"external-api-error-handling","content":"\n## 404 Not found\n\nFirst we need to realize that a 404 is not really an error.\nThe HTTP status is just telling us that the specific resource does not exist.\n\n```kotlin\nwhen (response.status) {\n    Ok -> ...\n    NotFound -> throw SomethingNotFoundException(...)\n}\n```\n\n```kotlin\nwhen (response.status) {\n    Ok -> ...\n    NotFound -> null\n}\n```\n\n## 504 Gateway timeout\n\n### Asynchronous use cases\n\n### Synchronous use cases\n\n## 500 Internal server error\n\nLet's talk about the elephant in the room.\n\n## \"Unrecoverable\" errors\n\n### 400 Bad request\n\nIf your requests are badly formatted it is unlikely that any retry attempt will succeed.\n\n### 401 Unauthorized & 403 Forbidden\n\nWell, you're toast.\n\n## Conclusion\n\n- 404 is not an error.\n- 504 Gateway timeouts should probably be aborted early and retried\n- 500 internal server errors should be evaluated and retried when possible\n","title":"External API error handling","description":"My takeaways from working with shaky APIs","date":"Jan 16, 2023","draft":true}},"__N_SSG":true}